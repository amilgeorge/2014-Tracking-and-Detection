function [value] = EnergyFunction4(inA,inR_T,inM,inm)

syms f(A, rAlpha, rBeta, rGamma, t1,t2,t3,M,m) 

syms h(A,rAlpha, rBeta, rGamma, t1,t2,t3,M)

syms R(rAlpha,rBeta, rGamma) 
inM = inM(:,1:50);
inm = inm(:,1:50);
Amatrix=inA;
rA = inR_T(1,1);
rB = inR_T(1,2);
rG = inR_T(1,3);
int1 = inR_T(2,1);
int2 =inR_T(2,2);
int3=inR_T(2,3);

RX = [cos(rAlpha) -sin(rAlpha) 0 ; sin(rAlpha) cos(rAlpha) 0 ; 0 0 1  ]; 
RY = [cos(rBeta) 0 sin(rBeta) ; 0 1 0 ; -sin(rBeta) 0 cos(rBeta) ] ;
RZ = [ 1 0 0 ; 0 cos(rGamma) -sin(rGamma) ; 0 sin(rGamma) cos(rGamma)] ;


R=RX*RY*RZ;

T=[t1;t2;t3];

R_T  = [R,T];

Mtemp=(sym(inA) * R_T * sym(inM));
fp=[];
for i=1:size(inM,2)
    Mpoint = sym(inA) * R_T * sym(inM(:,i));
    uMpoint = Mpoint(1,1)/Mpoint(3,1);
    vMpoint = Mpoint(2,1)/Mpoint(3,1);
    fp = [fp;uMpoint;vMpoint];
end
b=[];
for i=1:size(inm,2)
  
    umpoint = inm(1,i);
    vmpoint = inm(2,i);
    b = [b;umpoint;vmpoint];
end

Ematrix = (fp -b).^2;

%jacobian=diff(E);
E = sum(Ematrix);
J=diff(E)
%value=subs(E,{A, rAlpha, rBeta, rGamma, t1,t2,t3,M,m},{Amatrix,rA,rB,rG,int1,int2,int3,inM,inm})
v=subs(E,{rAlpha, rBeta, rGamma,t1,t2,t3},{rA,rB,rG,int1,int2,int3});
value = double(v);
end 